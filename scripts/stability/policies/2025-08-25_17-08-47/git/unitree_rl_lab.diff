--- git status ---
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   .gitignore
	modified:   source/unitree_rl_lab/unitree_rl_lab/assets/robots/unitree.py
	modified:   source/unitree_rl_lab/unitree_rl_lab/tasks/balance/agents/rsl_rl_ppo_cfg.py
	modified:   source/unitree_rl_lab/unitree_rl_lab/tasks/balance/robots/g1/23dof/balance_env_cfg.py
	modified:   source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py
	modified:   source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/__init__.py
	modified:   source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/velocity_env_cfg.py

no changes added to commit (use "git add" and/or "git commit -a") 


--- git diff ---
diff --git a/.gitignore b/.gitignore
index 3288d85..221cc1c 100644
--- a/.gitignore
+++ b/.gitignore
@@ -70,3 +70,5 @@ datasets
 *.mtl
 *.STL
 **/env.yaml
+
+unitree_model/
diff --git a/source/unitree_rl_lab/unitree_rl_lab/assets/robots/unitree.py b/source/unitree_rl_lab/unitree_rl_lab/assets/robots/unitree.py
index f2facd5..1656991 100644
--- a/source/unitree_rl_lab/unitree_rl_lab/assets/robots/unitree.py
+++ b/source/unitree_rl_lab/unitree_rl_lab/assets/robots/unitree.py
@@ -511,3 +511,114 @@ UNITREE_G1_29DOF_CFG = UnitreeArticulationCfg(
 
 
 """Configuration for the Unitree G1 23DOF Humanoid robot."""
+
+UNITREE_G1_23DOF_CFG_IMPLICIT = UnitreeArticulationCfg(
+    spawn=sim_utils.UsdFileCfg(
+        usd_path=f"{UNITREE_MODEL_DIR}/G1/23dof/usd/g1_23dof_rev_1_0/g1_23dof_rev_1_0.usd",
+        activate_contact_sensors=True,
+        rigid_props=sim_utils.RigidBodyPropertiesCfg(
+            disable_gravity=False,
+            retain_accelerations=False,
+            linear_damping=0.0,
+            angular_damping=0.0,
+            max_linear_velocity=1000.0,
+            max_angular_velocity=1000.0,
+            max_depenetration_velocity=1.0,
+        ),
+        articulation_props=sim_utils.ArticulationRootPropertiesCfg(
+            enabled_self_collisions=True,
+            solver_position_iteration_count=8,
+            solver_velocity_iteration_count=4,
+        ),
+    ),
+    init_state=ArticulationCfg.InitialStateCfg(
+        pos=(0.0, 0.0, 0.8),
+        joint_pos={
+            ".*_hip_pitch_joint": -0.1,
+            ".*_knee_joint": 0.3,
+            ".*_ankle_pitch_joint": -0.2,
+            ".*_shoulder_pitch_joint": 0.3,
+            "left_shoulder_roll_joint": 0.25,
+            "right_shoulder_roll_joint": -0.25,
+            ".*_elbow_joint": 0.97,
+            "left_wrist_roll_joint": 0.15,
+            "right_wrist_roll_joint": -0.15,
+        },
+        joint_vel={".*": 0.0},
+    ),
+    actuators={
+        "N7520-14.3": ImplicitActuatorCfg(
+            joint_names_expr=[".*_hip_pitch_.*", ".*_hip_yaw_.*", "waist_yaw_joint"],  # 5
+            effort_limit_sim=88,
+            velocity_limit_sim=32.0,
+            stiffness={
+                ".*_hip_.*": 100.0,
+                "waist_yaw_joint": 200.0,
+            },
+            damping={
+                ".*_hip_.*": 2.0,
+                "waist_yaw_joint": 5.0,
+            },
+            armature=0.01,
+        ),
+        "N7520-22.5": ImplicitActuatorCfg(
+            joint_names_expr=[".*_hip_roll_.*", ".*_knee_.*"],  # 4
+            effort_limit_sim=139,
+            velocity_limit_sim=20.0,
+            stiffness={
+                ".*_hip_roll_.*": 100.0,
+                ".*_knee_.*": 150.0,
+            },
+            damping={
+                ".*_hip_roll_.*": 2.0,
+                ".*_knee_.*": 4.0,
+            },
+            armature=0.01,
+        ),
+        "N5020-16": ImplicitActuatorCfg(
+            joint_names_expr=[".*_shoulder_.*", ".*_elbow_.*", ".*_wrist_roll_.*"],  # 10
+            effort_limit_sim=25,
+            velocity_limit_sim=37,
+            stiffness=40.0,
+            damping=10.0,
+            armature=0.01,
+        ),
+        "N5020-16-parallel": ImplicitActuatorCfg(
+            joint_names_expr=[".*ankle.*"],  # 4
+            effort_limit_sim=35,
+            velocity_limit_sim=30,
+            stiffness=40.0,
+            damping=10.0,
+            armature=0.01,
+        ),
+    },
+    joint_sdk_names=[
+        "left_hip_pitch_joint",
+        "left_hip_roll_joint",
+        "left_hip_yaw_joint",
+        "left_knee_joint",
+        "left_ankle_pitch_joint",
+        "left_ankle_roll_joint",
+        "right_hip_pitch_joint",
+        "right_hip_roll_joint",
+        "right_hip_yaw_joint",
+        "right_knee_joint",
+        "right_ankle_pitch_joint",
+        "right_ankle_roll_joint",
+        "waist_yaw_joint",
+        "",
+        "",
+        "left_shoulder_pitch_joint",
+        "left_shoulder_roll_joint",
+        "left_shoulder_yaw_joint",
+        "left_elbow_joint",
+        "left_wrist_roll_joint",
+        "",
+        "",
+        "right_shoulder_pitch_joint",
+        "right_shoulder_roll_joint",
+        "right_shoulder_yaw_joint",
+        "right_elbow_joint",
+        "right_wrist_roll_joint",
+    ],
+)
diff --git a/source/unitree_rl_lab/unitree_rl_lab/tasks/balance/agents/rsl_rl_ppo_cfg.py b/source/unitree_rl_lab/unitree_rl_lab/tasks/balance/agents/rsl_rl_ppo_cfg.py
index 07bbf36..3ca9bdd 100644
--- a/source/unitree_rl_lab/unitree_rl_lab/tasks/balance/agents/rsl_rl_ppo_cfg.py
+++ b/source/unitree_rl_lab/unitree_rl_lab/tasks/balance/agents/rsl_rl_ppo_cfg.py
@@ -10,7 +10,7 @@ from isaaclab_rl.rsl_rl import RslRlOnPolicyRunnerCfg, RslRlPpoActorCriticCfg, R
 @configclass
 class BasePPORunnerCfg(RslRlOnPolicyRunnerCfg):
     num_steps_per_env = 24
-    max_iterations = 50000
+    max_iterations = 5000
     save_interval = 100
     experiment_name = ""  # same as task name
     empirical_normalization = False
diff --git a/source/unitree_rl_lab/unitree_rl_lab/tasks/balance/robots/g1/23dof/balance_env_cfg.py b/source/unitree_rl_lab/unitree_rl_lab/tasks/balance/robots/g1/23dof/balance_env_cfg.py
index 90d6c1c..dd39fae 100644
--- a/source/unitree_rl_lab/unitree_rl_lab/tasks/balance/robots/g1/23dof/balance_env_cfg.py
+++ b/source/unitree_rl_lab/unitree_rl_lab/tasks/balance/robots/g1/23dof/balance_env_cfg.py
@@ -18,9 +18,14 @@ from isaaclab.utils import configclass
 from isaaclab.utils.assets import ISAAC_NUCLEUS_DIR, ISAACLAB_NUCLEUS_DIR
 from isaaclab.utils.noise import AdditiveUniformNoiseCfg as Unoise
 
-from unitree_rl_lab.assets.robots.unitree import UNITREE_G1_23DOF_CFG
+from unitree_rl_lab.assets.robots.unitree import UNITREE_G1_23DOF_CFG_IMPLICIT, UNITREE_G1_23DOF_CFG
 from unitree_rl_lab.tasks.balance import mdp
 
+# implicit motor (uses PDControl under the hood)
+USE_IMPLICIT = True
+# actions are torques and not position
+USE_TORQUE = False
+
 COBBLESTONE_ROAD_CFG = terrain_gen.TerrainGeneratorCfg(
     size=(8.0, 8.0),
     border_width=20.0,
@@ -62,7 +67,10 @@ class RobotSceneCfg(InteractiveSceneCfg):
         debug_vis=False,
     )
     # robots
-    robot: ArticulationCfg = UNITREE_G1_23DOF_CFG.replace(prim_path="{ENV_REGEX_NS}/Robot")
+    if USE_IMPLICIT:
+        robot: ArticulationCfg = UNITREE_G1_23DOF_CFG_IMPLICIT.replace(prim_path="{ENV_REGEX_NS}/Robot")
+    else:
+        robot: ArticulationCfg = UNITREE_G1_23DOF_CFG.replace(prim_path="{ENV_REGEX_NS}/Robot")
 
     # sensors
     height_scanner = RayCasterCfg(
@@ -117,8 +125,10 @@ class EventCfg:
         mode="reset",
         params={
             "asset_cfg": SceneEntityCfg("robot", body_names="torso_link"),
-            "force_range": (0.0, 0.0),
-            "torque_range": (-0.0, 0.0),
+            "force_range": (-5, 5),
+            "torque_range": (-5, 5),
+            # "force_range": (-30, 30),
+            # "torque_range": (-15, 15),
         },
     )
 
@@ -143,7 +153,7 @@ class EventCfg:
         mode="reset",
         params={
             "position_range": (1.0, 1.0),
-            "velocity_range": (-1.0, 1.0),
+            "velocity_range": (0, 0),
         },
     )
 
@@ -152,37 +162,40 @@ class EventCfg:
         func=mdp.push_by_setting_velocity,
         mode="interval",
         interval_range_s=(5.0, 5.0),
-        params={"velocity_range": {"x": (-0.5, 0.5), "y": (-0.5, 0.5)}},
+        params={"velocity_range": {"x": (0, 0), "y": (0, 0)}},
     )
 
 
-# @configclass
-# class CommandsCfg:
-#     """Command specifications for the MDP."""
-#     base_velocity = mdp.UniformLevelVelocityCommandCfg(
-#         asset_name="robot",
-#         resampling_time_range=(10.0, 10.0),
-#         rel_standing_envs=0.02,
-#         rel_heading_envs=1.0,
-#         heading_command=False,
-#         debug_vis=True,
-#         ranges=mdp.UniformLevelVelocityCommandCfg.Ranges(
-#             lin_vel_x=(-0.1, 0.1), lin_vel_y=(-0.1, 0.1), ang_vel_z=(-0.1, 0.1)
-#         ),
-#         limit_ranges=mdp.UniformLevelVelocityCommandCfg.Ranges(
-#             lin_vel_x=(-0.5, 1.0), lin_vel_y=(-0.3, 0.3), ang_vel_z=(-0.2, 0.2)
-#         ),
-#     )
+@configclass
+class CommandsCfg:
+    """Command specifications for the MDP."""
+    base_velocity = mdp.UniformLevelVelocityCommandCfg(
+        asset_name="robot",
+        resampling_time_range=(10.0, 10.0),
+        rel_standing_envs=0.02,
+        rel_heading_envs=1.0,
+        heading_command=False,
+        debug_vis=True,
+        ranges=mdp.UniformLevelVelocityCommandCfg.Ranges(
+            lin_vel_x=(0, 0), lin_vel_y=(0, 0), ang_vel_z=(0, 0)
+        ),
+        limit_ranges=mdp.UniformLevelVelocityCommandCfg.Ranges(
+            lin_vel_x=(0, 0), lin_vel_y=(0, 0.), ang_vel_z=(0, 0)
+        ),
+    )
 
 
 @configclass
 class ActionsCfg:
     """Action specifications for the MDP."""
 
-    # JointPositionAction = mdp.JointPositionActionCfg(
-    #     asset_name="robot", joint_names=[".*"], scale=0.25, use_default_offset=True
-    # )
-    JointEffortAction = mdp.JointEffortActionCfg(asset_name="robot", joint_names=[".*"], scale=1.0) # to be defined
+    if USE_TORQUE:
+        # TODO scale should be in real torque limit range?
+        JointEffortAction = mdp.JointEffortActionCfg(asset_name="robot", joint_names=[".*"], scale=1.0) # to be defined
+    else:
+        JointPositionAction = mdp.JointPositionActionCfg(
+            asset_name="robot", joint_names=[".*"], scale=0.25, use_default_offset=True
+        )
 
 
 
@@ -197,11 +210,10 @@ class ObservationsCfg:
         # observation terms (order preserved)
         base_ang_vel = ObsTerm(func=mdp.base_ang_vel, scale=0.2, noise=Unoise(n_min=-0.2, n_max=0.2))
         projected_gravity = ObsTerm(func=mdp.projected_gravity, noise=Unoise(n_min=-0.05, n_max=0.05))
-        # velocity_commands = ObsTerm(func=mdp.generated_commands, params={"command_name": "base_velocity"})
+        velocity_commands = ObsTerm(func=mdp.generated_commands, params={"command_name": "base_velocity"})
         joint_pos_rel = ObsTerm(func=mdp.joint_pos_rel, noise=Unoise(n_min=-0.01, n_max=0.01))
         joint_vel_rel = ObsTerm(func=mdp.joint_vel_rel, scale=0.05, noise=Unoise(n_min=-1.5, n_max=1.5))
         last_action = ObsTerm(func=mdp.last_action)
-        # gait_phase = ObsTerm(func=mdp.gait_phase, params={"period": 0.8})
 
         def __post_init__(self):
             self.history_length = 5
@@ -218,7 +230,7 @@ class ObservationsCfg:
         base_lin_vel = ObsTerm(func=mdp.base_lin_vel)
         base_ang_vel = ObsTerm(func=mdp.base_ang_vel, scale=0.2)
         projected_gravity = ObsTerm(func=mdp.projected_gravity)
-        # velocity_commands = ObsTerm(func=mdp.generated_commands, params={"command_name": "base_velocity"})
+        velocity_commands = ObsTerm(func=mdp.generated_commands, params={"command_name": "base_velocity"})
         joint_pos_rel = ObsTerm(func=mdp.joint_pos_rel)
         joint_vel_rel = ObsTerm(func=mdp.joint_vel_rel, scale=0.05)
         last_action = ObsTerm(func=mdp.last_action)
@@ -240,11 +252,11 @@ class RewardsCfg:
     """Reward terms for the MDP."""
 
     # -- task
-    # track_lin_vel_xy = RewTerm(
-    #     func=mdp.track_lin_vel_xy_yaw_frame_exp,
-    #     weight=1.0,
-    #     params={"command_name": "base_velocity", "std": math.sqrt(0.25)},
-    # )
+    track_lin_vel_xy = RewTerm(
+        func=mdp.track_lin_vel_xy_yaw_frame_exp,
+        weight=1.0,
+        params={"command_name": "base_velocity", "std": math.sqrt(0.25)},
+    )
     track_ang_vel_z = RewTerm(
         func=mdp.track_ang_vel_z_exp, weight=0.5, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
     )
@@ -316,16 +328,16 @@ class RewardsCfg:
             "sensor_cfg": SceneEntityCfg("contact_forces", body_names=".*ankle_roll.*"),
         },
     )
-    # feet_clearance = RewTerm(
-    #     func=mdp.foot_clearance_reward,
-    #     weight=1.0,
-    #     params={
-    #         "std": 0.05,
-    #         "tanh_mult": 2.0,
-    #         "target_height": 0.1,
-    #         "asset_cfg": SceneEntityCfg("robot", body_names=".*ankle_roll.*"),
-    #     },
-    # )
+    feet_clearance = RewTerm(
+        func=mdp.foot_clearance_reward,
+        weight=1.0,
+        params={
+            "std": 0.05,
+            "tanh_mult": 2.0,
+            "target_height": 0.1,
+            "asset_cfg": SceneEntityCfg("robot", body_names=".*ankle_roll.*"),
+        },
+    )
 
     # -- other
     undesired_contacts = RewTerm(
@@ -350,7 +362,6 @@ class TerminationsCfg:
 @configclass
 class CurriculumCfg:
     """Curriculum terms for the MDP."""
-
     terrain_levels = CurrTerm(func=mdp.terrain_levels_vel)
     lin_vel_cmd_levels = CurrTerm(mdp.lin_vel_cmd_levels)
 
@@ -364,7 +375,7 @@ class RobotEnvCfg(ManagerBasedRLEnvCfg):
     # Basic settings
     observations: ObservationsCfg = ObservationsCfg()
     actions: ActionsCfg = ActionsCfg()
-    # commands: CommandsCfg = CommandsCfg()
+    commands: CommandsCfg = CommandsCfg()
     # MDP settings
     rewards: RewardsCfg = RewardsCfg()
     terminations: TerminationsCfg = TerminationsCfg()
@@ -404,4 +415,4 @@ class RobotPlayEnvCfg(RobotEnvCfg):
         self.scene.num_envs = 32
         self.scene.terrain.terrain_generator.num_rows = 2
         self.scene.terrain.terrain_generator.num_cols = 10
-        # self.commands.base_velocity.ranges = self.commands.base_velocity.limit_ranges
+        self.commands.base_velocity.ranges = self.commands.base_velocity.limit_ranges
diff --git a/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py b/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py
index f5f98fb..9ca6276 100644
--- a/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py
+++ b/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py
@@ -10,9 +10,11 @@ from isaaclab_rl.rsl_rl import RslRlOnPolicyRunnerCfg, RslRlPpoActorCriticCfg, R
 @configclass
 class BasePPORunnerCfg(RslRlOnPolicyRunnerCfg):
     num_steps_per_env = 24
-    max_iterations = 50000
+    max_iterations = 5000
     save_interval = 100
     experiment_name = ""  # same as task name
+    logger = "wandb"
+    wandb_project = "isaaclab_g1_velocity"
     empirical_normalization = False
     policy = RslRlPpoActorCriticCfg(
         init_noise_std=1.0,
diff --git a/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/__init__.py b/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/__init__.py
index eabdc8c..0998c33 100644
--- a/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/__init__.py
+++ b/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/__init__.py
@@ -7,6 +7,6 @@ gym.register(
     kwargs={
         "env_cfg_entry_point": f"{__name__}.velocity_env_cfg:RobotEnvCfg",
         "play_env_cfg_entry_point": f"{__name__}.velocity_env_cfg:RobotPlayEnvCfg",
-        "rsl_rl_cfg_entry_point": f"unitree_rl_lab.tasks.velocity.agents.rsl_rl_ppo_cfg:BasePPORunnerCfg",
+        "rsl_rl_cfg_entry_point": f"unitree_rl_lab.tasks.locomotion.agents.rsl_rl_ppo_cfg:BasePPORunnerCfg",
     },
 )
diff --git a/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/velocity_env_cfg.py b/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/velocity_env_cfg.py
index 4192813..b43862d 100644
--- a/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/velocity_env_cfg.py
+++ b/source/unitree_rl_lab/unitree_rl_lab/tasks/locomotion/robots/g1/23dof/velocity_env_cfg.py
@@ -18,7 +18,7 @@ from isaaclab.utils import configclass
 from isaaclab.utils.assets import ISAAC_NUCLEUS_DIR, ISAACLAB_NUCLEUS_DIR
 from isaaclab.utils.noise import AdditiveUniformNoiseCfg as Unoise
 
-from unitree_rl_lab.assets.robots.unitree import UNITREE_G1_23DOF_CFG
+from unitree_rl_lab.assets.robots.unitree import UNITREE_G1_23DOF_CFG_IMPLICIT
 from unitree_rl_lab.tasks.locomotion import mdp
 
 COBBLESTONE_ROAD_CFG = terrain_gen.TerrainGeneratorCfg(
@@ -62,7 +62,7 @@ class RobotSceneCfg(InteractiveSceneCfg):
         debug_vis=False,
     )
     # robots
-    robot: ArticulationCfg = UNITREE_G1_23DOF_CFG.replace(prim_path="{ENV_REGEX_NS}/Robot")
+    robot: ArticulationCfg = UNITREE_G1_23DOF_CFG_IMPLICIT.replace(prim_path="{ENV_REGEX_NS}/Robot")
 
     # sensors
     height_scanner = RayCasterCfg(